| package |
package := Package name: 'PrintingNotepad'.
package paxVersion: 0;
	basicComment: 'Copyright (c) 2002-2004 Robert Jarvis

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'.

package basicScriptAt: #postuninstall put: 'Win32Constants
	removeKey: ''PHYSICALWIDTH'' ifAbsent: [ nil ];
	removeKey: ''PHYSICALHEIGHT'' ifAbsent: [ nil ];
	removeKey: ''PHYSICALOFFSETX'' ifAbsent: [ nil ];
	removeKey: ''PHYSICALOFFSETY'' ifAbsent: [ nil ]!!'.
package basicScriptAt: #preinstall put: 'Win32Constants
	at: ''PHYSICALWIDTH'' put: 110;
	at: ''PHYSICALHEIGHT'' put: 111;
	at: ''PHYSICALOFFSETX'' put: 112;
	at: ''PHYSICALOFFSETY'' put: 113!!'.

package classNames
	add: #PrintingNotepad;
	add: #PrintingNotepadOptionsDialog;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package allResourceNames: (Set new
	add: #PrintingNotepad -> 'Default view';
	add: #PrintingNotepadOptionsDialog -> 'Default view';
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\Object Arts\Dolphin\Base\Dolphin';
	add: '..\..\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\..\Object Arts\Dolphin\Registry\Dolphin Registry Access';
	add: '..\..\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\MVP Base Extensions\MVP Base Extensions';
	add: '..\..\Object Arts\Samples\MVP\Notepad\Notepad';
	add: '..\UserLibraryExtensions\UserLibraryExtensions';
	yourself).

package!

"Class Definitions"!

Dialog subclass: #PrintingNotepadOptionsDialog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Notepad subclass: #PrintingNotepad
	instanceVariableNames: 'leftMargin rightMargin topMargin bottomMargin'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

"End of package definition"!

"Source Globals"!

"Classes"!

PrintingNotepadOptionsDialog guid: (GUID fromString: '{25E761A8-239D-4720-ADE2-9A4F9B017DA0}')!
PrintingNotepadOptionsDialog comment: ''!
!PrintingNotepadOptionsDialog categoriesForClass!MVP-Presenters! !
!PrintingNotepadOptionsDialog methodsFor!

apply
	"The dialog has been closed with OK and the responses are acceptable
	so copy the results into the class variables"

	"self model
		leftMargin: (self presenterNamed: 'leftMargin') value;
		rightMargin: (self presenterNamed: 'rightMargin') value;
		topMargin: (self presenterNamed: 'topMargin') value;
		bottomMargin: (self presenterNamed: 'bottomMargin') value."

	super apply!

createComponents
	"Create the presenters contained by the receiver"

	super createComponents.
	self 
		add: TextPresenter new name: 'leftMargin';
		add: TextPresenter new name: 'rightMargin';
		add: TextPresenter new name: 'topMargin';
		add: TextPresenter new name: 'bottomMargin'
!

model: aModel
	| aspectBuffer |

	super model: aModel.

	aspectBuffer := self model.
	(self presenterNamed: 'leftMargin') model: (aspectBuffer aspectValue: #leftMargin).
	(self presenterNamed: 'rightMargin') model: (aspectBuffer aspectValue: #rightMargin).
	(self presenterNamed: 'topMargin') model: (aspectBuffer aspectValue: #topMargin).
	(self presenterNamed: 'bottomMargin') model: (aspectBuffer aspectValue: #bottomMargin).

	self setFields!

setFields
	(self presenterNamed: 'leftMargin') value: self model leftMargin printString.
	(self presenterNamed: 'rightMargin') value: self model rightMargin printString.
	(self presenterNamed: 'topMargin') value: self model topMargin printString.
	(self presenterNamed: 'bottomMargin') value: self model bottomMargin printString! !
!PrintingNotepadOptionsDialog categoriesFor: #apply!public! !
!PrintingNotepadOptionsDialog categoriesFor: #createComponents!public! !
!PrintingNotepadOptionsDialog categoriesFor: #model:!public! !
!PrintingNotepadOptionsDialog categoriesFor: #setFields!public! !

PrintingNotepad guid: (GUID fromString: '{5C61800C-BB31-4315-AB13-461C3B8D91C9}')!
PrintingNotepad comment: ''!
!PrintingNotepad categoriesForClass!Samples! !
!PrintingNotepad methodsFor!

basicPrint: aCanvas
	"Private - Display the contents of the window on the given canvas."

	| line font physicalOffset resolution topLeftMargin bottomRightMargin pageSize lines clipRegion |

	"Determine the left and top margins (we'll use them to set the logical viewport)"

	font := (documentPresenter view aspectValue: #font) value.
	aCanvas font: font.

	physicalOffset := (aCanvas getDeviceCaps: PHYSICALOFFSETX) @
				  (aCanvas getDeviceCaps: PHYSICALOFFSETY).
	resolution := aCanvas resolution.
	pageSize := (aCanvas getDeviceCaps: PHYSICALWIDTH) @ (aCanvas getDeviceCaps: PHYSICALHEIGHT).

	topLeftMargin := Point new.
	topLeftMargin
		x: (0 max: resolution x * self leftMargin - physicalOffset x) rounded;
		y: (0 max: resolution y * self topMargin - physicalOffset y + (font pixelSize / 2)) rounded.

	bottomRightMargin := Point new.
	bottomRightMargin
		x: (0 max: (pageSize x - (resolution x * self rightMargin - physicalOffset x))) rounded;
		y: (0 max: (pageSize y - (resolution y * self bottomMargin))) rounded.

	line := 0.

	clipRegion := Region rectangle: (Rectangle origin: topLeftMargin corner: bottomRightMargin).

	aCanvas
		startDoc;
		startPage;
		viewportOrigin: topLeftMargin;
		selectClipRegion: clipRegion.

	self model value lines do:
		[ :aLine |
		lines := self breakLines: aLine canvas: aCanvas.
		lines do:
			[ :aString |
			aCanvas text: aString at: 0@(font pixelSize * line) tabPositions: nil.
			line := line + 1.
			line * font pixelSize > (bottomRightMargin y - (topLeftMargin y + physicalOffset y))
				ifTrue:
					[ line := 0.
					aCanvas
						endPage;
						startPage;
						font: font;
						viewportOrigin: topLeftMargin;
						selectClipRegion: clipRegion ] ] ].
	aCanvas endDoc!

bottomMargin
	^bottomMargin!

bottomMargin: anObject
	bottomMargin := ('0', anObject displayString) asNumber!

breakLines: aString canvas: aCanvas
	"Private - Break aString into multiple lines that will fit the width of aCanvas."

	| col stream char line |

	col := OrderedCollection new.
	line := String new.
	stream := aString readStream.

	[ stream atEnd ] whileFalse:
		[ line := line, stream next asString.
		(aCanvas tabbedTextExtent: line tabPositions: nil) x > aCanvas clipBox width
			ifTrue:
				[ char := line last.
				col add: (line leftString: line size - 1).
				line := char asString ] ].
	col add: line.
	^col!

filePageSetup
	PrintingNotepadOptionsDialog create
		model: self;
		showModal!

filePrint
	| printerCanvas |

	printerCanvas := PrinterCanvas choose.
	printerCanvas notNil ifTrue: [ self basicPrint: printerCanvas ]!

initialize
	super initialize.
	leftMargin := rightMargin := 0.5.
	topMargin := bottomMargin := 1.0!

leftMargin
	^leftMargin!

leftMargin: anObject
	leftMargin := ('0', anObject displayString) asNumber!

onViewOpened
	super onViewOpened.
	self setFont: self view canvas!

registryKey
	"Private - answer a RegKey for access to this apps registry settings"

	^(RegKey fromPredefinedKey: 'HKEY_CURRENT_USER' sam: KEY_ALL_ACCESS)
		at: 'Software\Microsoft\Notepad'!

rightMargin
	^rightMargin!

rightMargin: anObject
	rightMargin := ('0', anObject displayString) asNumber!

setFont: aCanvas
	"Private - Set the view's font based on information in the registry."

	| logFont regValues |

	logFont := LOGFONT new.
	regValues := self registryKey subValues.

	logFont
		lfHeight: ((regValues at: 'iPointSize') * (aCanvas getDeviceCaps: LOGPIXELSY) / -720) asInteger;
		lfEscapement: (regValues at: 'lfEscapement');
		lfOrientation: (regValues at: 'lfOrientation');
		lfWeight: (regValues at: 'lfWeight');
		lfItalic: (regValues at: 'lfItalic');
		lfUnderline: (regValues at: 'lfUnderline');
		lfStrikeOut: (regValues at: 'lfStrikeOut');
		lfCharSet: (regValues at: 'lfCharSet');
		lfOutPrecision: (regValues at: 'lfOutPrecision');
		lfClipPrecision: (regValues at: 'lfClipPrecision');
		lfQuality: (regValues at: 'lfQuality');
		lfPitchAndFamily: (regValues at: 'lfPitchAndFamily');
		lfFaceName: (regValues at: 'lfFaceName').

	(documentPresenter view aspectValue: #font) value: (Font fromLogFont: logFont)!

topMargin
	^topMargin!

topMargin: anObject
	topMargin := ('0', anObject displayString) asNumber! !
!PrintingNotepad categoriesFor: #basicPrint:!private! !
!PrintingNotepad categoriesFor: #bottomMargin!accessing!public! !
!PrintingNotepad categoriesFor: #bottomMargin:!accessing!public! !
!PrintingNotepad categoriesFor: #breakLines:canvas:!private! !
!PrintingNotepad categoriesFor: #filePageSetup!public! !
!PrintingNotepad categoriesFor: #filePrint!public! !
!PrintingNotepad categoriesFor: #initialize!public! !
!PrintingNotepad categoriesFor: #leftMargin!accessing!public! !
!PrintingNotepad categoriesFor: #leftMargin:!accessing!public! !
!PrintingNotepad categoriesFor: #onViewOpened!public! !
!PrintingNotepad categoriesFor: #registryKey!private! !
!PrintingNotepad categoriesFor: #rightMargin!accessing!public! !
!PrintingNotepad categoriesFor: #rightMargin:!accessing!public! !
!PrintingNotepad categoriesFor: #setFont:!private! !
!PrintingNotepad categoriesFor: #topMargin!accessing!public! !
!PrintingNotepad categoriesFor: #topMargin:!accessing!public! !

!PrintingNotepad class methodsFor!

referencesToOtherPackages
	UserLibraryExtension.
	MVPBaseExtension.! !
!PrintingNotepad class categoriesFor: #referencesToOtherPackages!private! !

"Binary Globals"!

"Resources"!

(ResourceIdentifier class: PrintingNotepad name: 'Default view') assign: (Object fromBinaryStoreBytes:
(ByteArray fromHexString

(ResourceIdentifier class: PrintingNotepadOptionsDialog name: 'Default view') assign: (Object fromBinaryStoreBytes:
(ByteArray fromHexString

