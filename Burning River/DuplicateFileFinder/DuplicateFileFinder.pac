| package |
package := Package name: 'DuplicateFileFinder'.
package paxVersion: 0;
	basicComment: 'Copyright (c) 2002-2004 Robert Jarvis

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'.

package basicScriptAt: #preinstall put: 'Win32Constants
	at: ''FILE_ATTRIBUTE_HIDDEN'' put: 2;
	at: ''FILE_ATTRIBUTE_SYSTEM'' put: 4;
	at: ''FILE_ATTRIBUTE_DIRECTORY'' put: 16r10;
	at: ''FILE_ATTRIBUTE_ARCHIVE'' put: 16r20;
	at: ''FILE_ATTRIBUTE_TEMPORARY'' put: 16r100;
	at: ''FILE_ATTRIBUTE_COMPRESSED'' put: 16r800;
	at: ''FILE_ATTRIBUTE_OFFLINE'' put: 16r1000
'.

package classNames
	add: #DuplicateFileFinder;
	add: #DuplicateFileShell;
	add: #DuplicateFileShell2;
	add: #DuplicateFileShell3;
	yourself.

package methodNames
	add: #WIN32_FIND_DATA -> #isArchive;
	add: #WIN32_FIND_DATA -> #isCompressed;
	add: #WIN32_FIND_DATA -> #isHidden;
	add: #WIN32_FIND_DATA -> #isOffline;
	add: #WIN32_FIND_DATA -> #isSystem;
	add: #WIN32_FIND_DATA -> #isTemporary;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package allResourceNames: (Set new
	add: #DuplicateFileShell -> 'DuplicateFileView';
	add: #DuplicateFileShell2 -> 'DuplicateFileView2';
	add: #DuplicateFileShell3 -> 'DuplicateFileView3';
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\Object Arts\Dolphin\Base\Dolphin';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars';
	add: '..\..\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\..\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\..\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models';
	yourself).

package!

"Class Definitions"!

Model subclass: #DuplicateFileFinder
	instanceVariableNames: 'driveList filenames drive'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''!
Shell subclass: #DuplicateFileShell
	instanceVariableNames: 'drivePresenter filenamePresenter directoryPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DuplicateFileShell subclass: #DuplicateFileShell2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DuplicateFileShell subclass: #DuplicateFileShell3
	instanceVariableNames: 'statusValueHolder'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!WIN32_FIND_DATA methodsFor!

isArchive
	"Answer whether the receiver describes an entity which has changed since the last backup."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_ARCHIVE

!

isCompressed
	"Answer whether the receiver describes a temporary entity."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_COMPRESSED!

isHidden
	"Answer whether the receiver describes a directory."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_HIDDEN

!

isOffline
	"Answer whether the receiver describes an entity stored offline."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_OFFLINE!

isSystem
	"Answer whether the receiver describes a system entity."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_SYSTEM

!

isTemporary
	"Answer whether the receiver describes a temporary entity."

	^self dwFileAttributes allMask: FILE_ATTRIBUTE_TEMPORARY! !
!WIN32_FIND_DATA categoriesFor: #isArchive!public! !
!WIN32_FIND_DATA categoriesFor: #isCompressed!public! !
!WIN32_FIND_DATA categoriesFor: #isHidden!public! !
!WIN32_FIND_DATA categoriesFor: #isOffline!public! !
!WIN32_FIND_DATA categoriesFor: #isSystem!public! !
!WIN32_FIND_DATA categoriesFor: #isTemporary!public! !

"End of package definition"!

"Source Globals"!

"Classes"!

DuplicateFileFinder guid: (GUID fromString: '{42DAA27F-5EDF-11D3-826E-00001D19F5C2}')!
DuplicateFileFinder comment: 'Events triggered:
#driveChanged	Triggered when drive letter changed and new duplicate list is available'!
!DuplicateFileFinder categoriesForClass!No category! !
!DuplicateFileFinder methodsFor!

drive
	^drive!

drive: aString
	drive := aString.
	filenames := nil.
	self searchDrive: self drive.
	self trigger: #driveChanged.
	^self drive!

driveList
	^driveList!

driveList: anArray
	driveList := anArray!

duplicateFiles
	^self filenames select: [ :each | each size > 1 ]!

filenames
	filenames isNil
		ifTrue: [ filenames := Dictionary new initialize ].
	^filenames!

initialize
	| aCollection anOtherCollection |

	aCollection := self logicalDriveStrings.
	anOtherCollection := OrderedCollection new initialize.

	aCollection do: [ :aString | anOtherCollection add: ((aString subStrings: ':\') at: 1) ].

	self driveList: anOtherCollection!

logicalDriveStrings
	"Answers a collection of strings containing the valid drive names in the system."

	| buffer bufferSize lastWasNul aCollection aString |

	bufferSize := (26 * 4) + 1.
	buffer := String new: bufferSize.

	(KernelLibrary default getLogicalDriveStrings: bufferSize asParameter buffer: buffer) == 0
		ifTrue: [ KernelLibrary default systemError ].

	"We can't use String>>subStrings: here because the NUL characters in the string terminate
	 the substring search.  Instead we have to iterate over the string returned by
	 getLogicalDriveStrings."

	lastWasNul := false.
	aCollection := OrderedCollection new initialize.
	aString := String new initialize.

	buffer do: [ :aCharacter |
		aCharacter asInteger = 0
			ifTrue: [ lastWasNul
					ifTrue: [ ^aCollection ]
					ifFalse: [ aCollection add: aString.
						     aString := String new initialize.
						     lastWasNul := true ] ]
			ifFalse: [ lastWasNul := false.
				      aString := aString, aCharacter asSymbol ] ].

	^aCollection!

processEntry: aWin32FindData inDirectory: aDirectoryName
	(aWin32FindData isDirectory)
		ifTrue: [
			(aWin32FindData fileName = '.') | (aWin32FindData fileName = '..')
				ifFalse: [ self searchDirectory: aDirectoryName, aWin32FindData fileName, '\' ] ]
		ifFalse: [ self recordFilename: aWin32FindData fileName inDirectory: aDirectoryName]!

recordFilename: aFilename inDirectory: aDirectoryName
	(self filenames
		at: aFilename
		ifAbsentPut: [ OrderedCollection new initialize ]) add: aDirectoryName!

searchDirectory: aString
	"Private: search the directory given in aString"

	(File find: aString, '*.*') do: [ :each | self processEntry: each inDirectory: aString ]!

searchDrive: aString
	"Search the drive specified in aString for duplicates.  Answer a collection
	 of duplicate file names."

	self searchDirectory: aString, ':\'.
	^self duplicateFiles! !
!DuplicateFileFinder categoriesFor: #drive!accessing!public! !
!DuplicateFileFinder categoriesFor: #drive:!accessing!public! !
!DuplicateFileFinder categoriesFor: #driveList!public! !
!DuplicateFileFinder categoriesFor: #driveList:!public! !
!DuplicateFileFinder categoriesFor: #duplicateFiles!accessing!public! !
!DuplicateFileFinder categoriesFor: #filenames!private! !
!DuplicateFileFinder categoriesFor: #initialize!public! !
!DuplicateFileFinder categoriesFor: #logicalDriveStrings!public! !
!DuplicateFileFinder categoriesFor: #processEntry:inDirectory:!private! !
!DuplicateFileFinder categoriesFor: #recordFilename:inDirectory:!private! !
!DuplicateFileFinder categoriesFor: #searchDirectory:!private! !
!DuplicateFileFinder categoriesFor: #searchDrive:!public!searching! !

!DuplicateFileFinder class methodsFor!

searchDrive: aString
	^self new searchDrive: aString! !
!DuplicateFileFinder class categoriesFor: #searchDrive:!public!searching! !

DuplicateFileShell guid: (GUID fromString: '{42DAA280-5EDF-11D3-826E-00001D19F5C2}')!
DuplicateFileShell comment: ''!
!DuplicateFileShell categoriesForClass!No category! !
!DuplicateFileShell methodsFor!

createComponents
	"Private - Create the presenters for components in the view"

	super createComponents.
	self drivePresenter: (self add: ListPresenter new name: 'drives').
	self filenamePresenter: (self add: ListPresenter new name: 'filenames').
	self directoryPresenter: (self add: ListPresenter new name: 'directories').!

createSchematicWiring
	super createSchematicWiring.

	self drivePresenter
		when: #selectionChanged send: #onDriveChanged to: self.

	self filenamePresenter
		when: #selectionChanged send: #onFilenameChanged to: self.

	self model
		when: #driveChanged send: #onListUpdated to: self.!

directoryPresenter
	^directoryPresenter!

directoryPresenter: aPresenter
	directoryPresenter := aPresenter!

drivePresenter
	^drivePresenter!

drivePresenter: aPresenter
	drivePresenter := aPresenter!

filenamePresenter
	^filenamePresenter!

filenamePresenter: aPresenter
	filenamePresenter := aPresenter!

onDriveChanged
	"Handle the user changing the selected drive"

	| selection |

	self filenamePresenter clear.
	self directoryPresenter clear.
	self view update.
	selection := self drivePresenter selectionIfNone: [ nil ].
	selection isNil
		ifFalse: [ Cursor wait showWhile:
				[ [self model drive: selection]
					on: Win32Error do: [ :anException |
						anException statusCode ~= 16r15
							ifTrue: [ anException pass ] ] ] ]!

onFilenameChanged
	"Change the contents of directoryPresenter to match the new selection in filenamePresenter"

	| selection |

	selection := self filenamePresenter selectionIfNone: [ nil ].
	selection isNil
		ifFalse: [ self directoryPresenter list: (self model filenames at: selection) ]!

onListUpdated
	"Fill the filename box"

	self filenamePresenter list: self model duplicateFiles keys asSortedCollection!

onViewOpened
	"Private - perform all initializations required when the view is opened"

	super onViewOpened.
	self drivePresenter list: model driveList! !
!DuplicateFileShell categoriesFor: #createComponents!public! !
!DuplicateFileShell categoriesFor: #createSchematicWiring!public! !
!DuplicateFileShell categoriesFor: #directoryPresenter!public! !
!DuplicateFileShell categoriesFor: #directoryPresenter:!public! !
!DuplicateFileShell categoriesFor: #drivePresenter!public! !
!DuplicateFileShell categoriesFor: #drivePresenter:!public! !
!DuplicateFileShell categoriesFor: #filenamePresenter!public! !
!DuplicateFileShell categoriesFor: #filenamePresenter:!public! !
!DuplicateFileShell categoriesFor: #onDriveChanged!public! !
!DuplicateFileShell categoriesFor: #onFilenameChanged!public! !
!DuplicateFileShell categoriesFor: #onListUpdated!public! !
!DuplicateFileShell categoriesFor: #onViewOpened!public! !

!DuplicateFileShell class methodsFor!

defaultModel
	^DuplicateFileFinder new initialize!

defaultView
	^'DuplicateFileView'! !
!DuplicateFileShell class categoriesFor: #defaultModel!public! !
!DuplicateFileShell class categoriesFor: #defaultView!public! !

DuplicateFileShell2 guid: (GUID fromString: '{42DAA281-5EDF-11D3-826E-00001D19F5C2}')!
DuplicateFileShell2 comment: ''!
!DuplicateFileShell2 categoriesForClass!No category! !
!DuplicateFileShell2 class methodsFor!

defaultView
	^'DuplicateFileView2'
! !
!DuplicateFileShell2 class categoriesFor: #defaultView!public! !

DuplicateFileShell3 guid: (GUID fromString: '{42DAA282-5EDF-11D3-826E-00001D19F5C2}')!
DuplicateFileShell3 comment: ''!
!DuplicateFileShell3 categoriesForClass!No category! !
!DuplicateFileShell3 methodsFor!

initialize
	super initialize.
	statusValueHolder := ValueHolder new.!

onDriveChanged
	| selection |

	selection := self drivePresenter selectionIfNone: [ nil ].
	selection notNil
		ifTrue: [ self status: (Notification new messageText: 'Scanning drive ', selection, '...') ].
	super onDriveChanged.
	self status: nil.
	self view update.!

onViewOpened
	"Received when the receiver's view is been connected. "

	| statusItem |

	super onViewOpened.
	statusItem := self view viewNamed: 'text' ifNone: [].
	statusItem notNil ifTrue: [
		statusItem model: statusValueHolder ].
	self status: nil!

status: anObject
	statusValueHolder value: anObject! !
!DuplicateFileShell3 categoriesFor: #initialize!public! !
!DuplicateFileShell3 categoriesFor: #onDriveChanged!public! !
!DuplicateFileShell3 categoriesFor: #onViewOpened!public! !
!DuplicateFileShell3 categoriesFor: #status:!public! !

!DuplicateFileShell3 class methodsFor!

defaultView
	^'DuplicateFileView3'
! !
!DuplicateFileShell3 class categoriesFor: #defaultView!public! !

"Binary Globals"!

"Resources"!

(ResourceIdentifier class: DuplicateFileShell name: 'DuplicateFileView') assign: (Object fromBinaryStoreBytes:
(ByteArray fromHexString

(ResourceIdentifier class: DuplicateFileShell2 name: 'DuplicateFileView2') assign: (Object fromBinaryStoreBytes:
(ByteArray fromHexString

(ResourceIdentifier class: DuplicateFileShell3 name: 'DuplicateFileView3') assign: (Object fromBinaryStoreBytes:
(ByteArray fromHexString: ''))!

